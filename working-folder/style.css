/*----------------------- The Root --------------------------*/

/* I'm using `em` for font sizes, with `px` sizes noted for each in case a browser doesn't render `em`. (If there are duplicate styles, CSS will apply the style furthest down - closest to the bottom of - the cascading style sheet.)*/

:root {
  background-color: #FFFFFF;
  color: #000000;
  font-family: 'Lato', sans-serif;
  font-size: 16px;
  font-size: 1em;
  font-size: 100%;
}

/*----------------------- The Body --------------------------*/

/* The body is the container for the CSS grid. */

body {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: auto;
  grid-column-gap: 16px;
  grid-column-gap: 1em;
  grid-row-gap: 16px;
  grid-row-gap: 1em;
  padding: 16px;
  padding: 1em;
}

/*----------------------- CSS for HTML elements --------------------------*/

/* I prefer using html elements as the containers inside of the grid, rather than a bunch of divs with classes, as the html elements are more descriptive without classes or ids. */

header {
  grid-column: 1 / 13;
  grid-row: 1;
}

nav {
  grid-column: 2 / 13;
  grid-row: 2;
}

main {
  grid-column: 1 / 13;
  grid-row: 3;

  display: grid;
  grid-template-rows: auto;
}

main > article {
  grid-row: 2;
}

footer {
  grid-column: 1 / 13;
  grid-row: 5;
}

footer #icon {
  padding-right: 0.5em;
}

/*----------------------- Typography classes --------------------------*/

/* I use classes to apply styles across elements.  This way, html elements can be used to arrange content across the CSS grid and I can control styling separately. */

.h1 {
  font-family: 'Patua One', cursive;
  font-size: 32px;
  font-size: 2em;
}

.h2 {
  font-family: 'Patua One', cursive;
  font-size: 24px;
  font-size: 1.5em;
}

.h3 {
  font-family: 'Patua One', cursive;
  font-size: 20px;
  font-size: 1.25em;
}

.small {
  font-family: 'Lato', sans-serif;
  font-size: 14px;
  font-size: 0.875em;
}

/*----------------------- Customizing Links --------------------------*/

a:link {
  color: #000000;
}

a:visited {
  color: #000000;
}

a:active {
  background-image: linear-gradient(0deg,rgba(244,208,111,0.5) 50%,transparent 50%);
}

header > a:link  {
  text-decoration: none;
}

header > a:hover {
  text-decoration: underline;
}

nav > a:link  {
  text-decoration: none;
}

nav > a:hover {
  text-decoration: underline;
}

/*
mark {
  background-color: rgba(244,208,111,0.5);
}
*/

/*----------------------- Font awesome icons --------------------------*/

.fa-strava {
  color: #fc4c02;
}

.fa-linkedin {
  color: #0077b5;
}

.fa-medium {
  color: #12100e;
}

.fa-twitter {
  color: #1da1f2;
}

.fa-github {
  color: #24292e;
}

.fa-behance {
  color: #1769ff;
}

.fa-dribbble {
  color: #ea4c89;
}

/* Making all icons black. */

#icon {
  font-size: 20px;
  font-size: 1.25em;
  color: #000000;
}

/*----------------------- Responsive typography via media queries. --------------------------*/

/* I'm designing and coding with a mobile-first approach, which means the baseline styles are for mobile.  (i.e. I scale up for desktop rather than scale down for mobile.)  I wanted to scale certain text a bit larger.  For example, on the desktop, I wanted the body text to be 2x larger than on mobile, but I wanted the tagline to be 3x as large.  Because I'm using em font sizes, changing the body font-size will change font sizes everywhere.  Additional font size changes like "h1" and "icon" below are to scale text differently than the body.*/

@media screen and (min-width: 768px) {
  body {
    font-size: 1.5em;
  }
  .h1 {
    font-size: 3em;
  }
  #icon {
    font-size: 1.5rem;
  }
}

@media screen and (min-width: 1440px) {
  body {
    font-size: 2em;
  }
  .h1 {
    font-size: 3em;
  }
  #icon {
    font-size: 2rem;
  }
}